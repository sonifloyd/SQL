emp_id	emp_name	dept_id	salary	manager_id	hire_date
1	Alice	101	50000	3	2023-06-12
2	Bob	101	60000	3	2023-04-10
3	Charlie	102	80000	NULL	2022-01-15
4	David	103	40000	3	2023-07-20
5	Eve	102	70000	3	2023-08-18

2. Find Total Employees in Each Department
select dept_id , count(emp_id) as total_emp from emp group by dept_id;

3. Find 2nd Highest Salary Without Using Limit ( not know)

SELECT MAX(salary) 
FROM Employee 
WHERE salary < (SELECT MAX(salary) FROM Employee);

4. Find Employees Who Earn More Than Their Manager( not know)
SELECT e.emp_name, e.salary 
FROM Employee e
JOIN Employee m ON e.manager_id = m.emp_id
WHERE e.salary > m.salary; 

5. Fetch Top 3 Highest Salaries

SELECT emp_name, salary 
FROM Employee 
ORDER BY salary DESC
LIMIT 3;

6. Employees Hired in the Last 6 Months

SELECT emp_name, hire_date 
FROM Employee 
WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);

7. Find Duplicate Records

SELECT emp_name, COUNT(*)
FROM Employee
GROUP BY emp_name
HAVING COUNT(*) > 1;

ACID in SQL
Property	Description	Example
A - Atomicity	The entire transaction is all or nothing ‚Äî if one part fails, the whole transaction is rolled back.	Transferring ‚Çπ100 from Account A to B ‚Äî either both debit and credit happen or none at all.
C - Consistency	The database remains in a valid state before and after the transaction.	If ‚Çπ100 is transferred, the total balance in both accounts remains the same before and after the transaction.
I - Isolation	Transactions occur independently without interfering with each other.	Two users transferring money at the same time will not affect each other's transactions.
D - Durability	Once the transaction is committed, the changes are permanent, even if the system crashes.	If ‚Çπ100 is transferred and the system crashes, the amount will still be transferred after recovery.

Table: Employee
emp_id	emp_name	dept_id	salary	manager_id	hire_date
1	Alice	101	50000	3	2023-06-12
2	Bob	101	60000	3	2023-04-10
3	Charlie	102	80000	NULL	2022-01-15
4	David	103	40000	3	2023-07-20
5	Eve	102	70000	3	2023-08-18

able: Department
dept_id	dept_name
101	IT
102	HR
103	Marketing
104	Sales

Q. Get employee name with their department name
select  e.emp_name ,d. dept_name  from Employee  e
inner join  Department d where  e.dept_id = d.dept_id;

Q.Get Employee Name with their Manager Name
SELECT e.emp_name AS Employee, m.emp_name AS Manager
FROM Employee e
LEFT JOIN Employee m
ON e.manager_id = m.emp_id;

10. üîç Find Employees with Same Salary ( not know)
SELECT e1.emp_name AS Employee1, e2.emp_name AS Employee2, e1.salary
FROM Employee e1
JOIN Employee e2
ON e1.salary = e2.salary AND e1.emp_id <> e2.emp_id;


2. Find Duplicate Employees
Table: Employee

emp_id	emp_name	department
1	Alice	IT
2	Bob	HR
3	Alice	IT
4	David	Finance

SELECT emp_name, COUNT(*) 
FROM Employee
GROUP BY emp_name
HAVING COUNT(*) > 1;

3. Find Employees Who Earn More Than Their Manager
Table: Employee

emp_id	emp_name	salary	manager_id
1	Alice	80000	3
2	Bob	90000	3
3	Charlie	70000	NULL

SELECT e.emp_name AS Employee, m.emp_name AS Manager
FROM Employee e
JOIN Employee m
ON e.manager_id = m.emp_id
WHERE e.salary > m.salary;


4. Find Employees with Same Salary in Different Departments
‚úÖ Table: Employee

emp_id	emp_name	salary	department
1	Alice	50000	IT
2	Bob	50000	HR
3	Charlie	70000	Finance

select emp_id ,

6. Get Department with Maximum Number of Employees
‚úÖ Table: Employee

emp_id	emp_name	department
1	Alice	IT
2	Bob	IT
3	Charlie	HR
4	David	IT

SELECT department, COUNT(emp_id) AS TotalEmployees
FROM Employee
GROUP BY department
ORDER BY TotalEmployees DESC
LIMIT 1;

7. Find Employees Who Don't Have Managers
‚úÖ Table: Employee

emp_id	emp_name	manager_id
1	Alice	3
2	Bob	NULL
3	Charlie	NULL

SELECT emp_name
FROM Employee
WHERE manager_id IS NULL;

8. Find Employees Having Maximum Salary in Each Department

Table: Employee

emp_id	emp_name	department	salary
1	Alice	IT	50000
2	Bob	IT	70000
3	Charlie	HR	60000
4	David	HR	80000



